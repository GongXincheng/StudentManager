<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
		
<mapper namespace="com.gxc.stu.mapper.StudentMapper">

	<!-- 根据学生ID查询学生信息 -->
	<select id="findStuByStuId" parameterType="String" resultType="com.gxc.stu.pojo.Student">
		select * from stu WHERE stuId = #{stuId};
	</select>
	
	<!-- 根据ID查询学生信息 -->
	<select id="findStuById" parameterType="Integer"  resultType="com.gxc.stu.pojo.Student">
		select * from stu WHERE id = #{id};
	</select>
	
	<!-- 添加学生 -->
	<insert id="addStudent" parameterType="com.gxc.stu.pojo.Student">
		INSERT INTO stu (
			stuId,
			stuName,
			gender,
			headPic,
			birthday,
			comeDate,
			speId
		)
		VALUES
		(
			#{stuId},
			#{stuName},
			#{gender},
			#{headPic},
			#{birthday},
			#{comeDate},
			#{specialty.speId}
		);
	</insert>
	
	<!-- 根据条件查询学生列表 -->
	<resultMap type="com.gxc.stu.pojo.Student" id="StuCondition">
		<id column="id" property="id"/>
		<result column="stuId" property="stuId"/>
		<result column="stuName" property="stuName"/>
		<result column="gender" property="gender"/>
		<result column="headPic" property="headPic"/>
		<result column="birthday" property="birthday"/>
		<result column="comeDate" property="comeDate"/>
		<!-- <association property="specialty" javaType="com.gxc.stu.pojo.Specialty">
			<id column="speId" property="speId"/>
			<result column="speName" property="speName"/>
			<result column="deptId" property="deptId"/>
			<result column="deptName" property="deptName"/>
		</association> -->
		<result column="speId" property="specialty.speId"/>
		<result column="speName" property="specialty.speName"/>
		<result column="deptId" property="specialty.deptId"/>
		<result column="deptName" property="specialty.deptName"/>
	</resultMap>
	<select id="findStiListByCondition" parameterType="pojo.StudentCondition" resultMap="StuCondition">
		SELECT
			id,
			stuId,
			stuName,
			gender,
			headPic,
			birthday,
			comeDate,
			s.speId,
			speName,
			deptId,
			deptName
		FROM
			stu s
		LEFT JOIN specialty p 
		ON s.speId = p.speId
		<where>
			<if test="stuId != null and stuId != ''">
				AND stuId LIKE "%"#{stuId}"%"
			</if>
			<if test="stuName != null and stuName != ''">
				AND stuName LIKE "%"#{stuName}"%"
			</if>
			<if test="deptId != null and deptId != 0">
				AND deptId = #{deptId}
			</if>
			<if test="speId != null and speId != 0">
				AND s.speId = #{speId}
			</if>
		</where>
	</select>
	
	
	<!-- 根据学生Id查询学生信息 两张表 -->
	<resultMap type="com.gxc.stu.pojo.Student" id="editPre">
		<id column="id" property="id"/>
		<result column="stuId" property="stuId"/>
		<result column="stuName" property="stuName"/>
		<result column="gender" property="gender"/>
		<result column="headPic" property="headPic"/>
		<result column="birthday" property="birthday"/>
		<result column="comeDate" property="comeDate"/>
		<association property="specialty" javaType="com.gxc.stu.pojo.Specialty">
			<id column="speId" property="speId"/>
			<result column="speName" property="speName"/>
			<result column="deptId" property="deptId"/>
			<result column="deptName" property="deptName"/>
		</association>
	</resultMap>
	<select id="findStuByStuIdEdit" parameterType="String" resultMap="editPre">
		SELECT
			id,
			stuId,
			stuName,
			gender,
			headPic,
			birthday,
			comeDate,
			s.speId,
			speName,
			deptId,
			deptName
		FROM
			stu s
		LEFT JOIN specialty p 
		ON s.speId = p.speId
		where stuId = #{stuId}
	</select>
	
	<!-- 更新学生信息 -->
	<update id="updateStudent" parameterType="com.gxc.stu.pojo.Student">
		UPDATE stu
		SET 
			stuId = #{stuId},
			stuName = #{stuName},
			gender = #{gender},
			headPic = #{headPic},
			birthday = #{birthday},
			comeDate = #{comeDate},
			speId = #{specialty.speId}
		WHERE
			id = #{id}
	</update>

	<!-- 删除学生 -->
	<delete id="deleteStuById" parameterType="Integer">
		delete from stu where id = #{id}
	</delete>
	
</mapper>